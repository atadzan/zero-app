// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	article "zero-app/internal/handler/article"
	auth "zero-app/internal/handler/auth"
	user "zero-app/internal/handler/user"
	"zero-app/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/signUp",
				Handler: auth.SignUpHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/signIn",
				Handler: auth.SignInHandler(serverCtx),
			},
		},
		rest.WithPrefix("/auth"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.UserIdentityMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/profile",
					Handler: user.GetByTokenHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/profile",
					Handler: user.UpdateHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/user"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.UserIdentityMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: article.CreateHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:article_id",
					Handler: article.GetByIdHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: article.GetAllHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/:article_id",
					Handler: article.UpdateArticleHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:article_id",
					Handler: article.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/articles"),
	)
}
